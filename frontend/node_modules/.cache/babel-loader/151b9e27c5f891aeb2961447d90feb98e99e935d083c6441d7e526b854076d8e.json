{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nexport var userAgentMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request, headers, userAgent, defaultUserAgent, customUserAgent, normalUAValue;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              request = args.request;\n              if (!HttpRequest.isInstance(request)) return [2 /*return*/, next(args)];\n              headers = request.headers;\n              userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n              return [4 /*yield*/, options.defaultUserAgentProvider()];\n            case 1:\n              defaultUserAgent = _c.sent().map(escapeUserAgent);\n              customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n              // Set value to AWS-specific user agent header\n              headers[X_AMZ_USER_AGENT] = __spread(defaultUserAgent, userAgent, customUserAgent).join(SPACE);\n              normalUAValue = __spread(defaultUserAgent.filter(function (section) {\n                return section.startsWith(\"aws-sdk-\");\n              }), customUserAgent).join(SPACE);\n              if (options.runtime !== \"browser\" && normalUAValue) {\n                headers[USER_AGENT] = headers[USER_AGENT] ? headers[USER_AGENT] + \" \" + normalUAValue : normalUAValue;\n              }\n              return [2 /*return*/, next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nvar escapeUserAgent = function (_a) {\n  var _b = __read(_a, 2),\n    name = _b[0],\n    version = _b[1];\n  var prefixSeparatorIndex = name.indexOf(\"/\");\n  var prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n  var uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version].filter(function (item) {\n    return item && item.length > 0;\n  }).map(function (item) {\n    return item === null || item === void 0 ? void 0 : item.replace(UA_ESCAPE_REGEX, \"_\");\n  }).join(\"/\");\n};\nexport var getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true\n};\nexport var getUserAgentPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["HttpRequest","SPACE","UA_ESCAPE_REGEX","USER_AGENT","X_AMZ_USER_AGENT","userAgentMiddleware","options","next","context","args","__awaiter","request","isInstance","headers","userAgent","_a","map","escapeUserAgent","defaultUserAgentProvider","defaultUserAgent","_c","sent","customUserAgent","_b","__spread","join","normalUAValue","filter","section","startsWith","runtime","__assign","__read","name","version","prefixSeparatorIndex","indexOf","prefix","substring","uaName","toLowerCase","item","length","replace","getUserAgentMiddlewareOptions","step","priority","tags","override","getUserAgentPlugin","config","applyToStack","clientStack","add"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/middleware-user-agent/src/user-agent-middleware.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n  UserAgentPair,\n} from \"@aws-sdk/types\";\n\nimport { UserAgentResolvedConfig } from \"./configurations\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\n\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nexport const userAgentMiddleware = (options: UserAgentResolvedConfig) => <Output extends MetadataBearer>(\n  next: BuildHandler<any, any>,\n  context: HandlerExecutionContext\n): BuildHandler<any, any> => async (args: BuildHandlerArguments<any>): Promise<BuildHandlerOutput<Output>> => {\n  const { request } = args;\n  if (!HttpRequest.isInstance(request)) return next(args);\n  const { headers } = request;\n  const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n  const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n  const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n  // Set value to AWS-specific user agent header\n  headers[X_AMZ_USER_AGENT] = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n  // Get value to be sent with non-AWS-specific user agent header.\n  const normalUAValue = [\n    ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n    ...customUserAgent,\n  ].join(SPACE);\n  if (options.runtime !== \"browser\" && normalUAValue) {\n    headers[USER_AGENT] = headers[USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nconst escapeUserAgent = ([name, version]: UserAgentPair): string => {\n  const prefixSeparatorIndex = name.indexOf(\"/\");\n  const prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n  let uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version]\n    .filter((item) => item && item.length > 0)\n    .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n    .join(\"/\");\n};\n\nexport const getUserAgentMiddlewareOptions: BuildHandlerOptions & AbsoluteLocation = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true,\n};\n\nexport const getUserAgentPlugin = (config: UserAgentResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAcpD,SAASC,KAAK,EAAEC,eAAe,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,aAAa;AAElF;;;;;;;;;;;;AAYA,OAAO,IAAMC,mBAAmB,GAAG,SAAAA,CAACC,OAAgC;EAAK,iBACvEC,IAA4B,EAC5BC,OAAgC;IACL,iBAAOC,IAAgC;MAAA,OAAAC,SAAA;;;;;;cAC1DC,OAAO,GAAKF,IAAI,CAAAE,OAAT;cACf,IAAI,CAACX,WAAW,CAACY,UAAU,CAACD,OAAO,CAAC,EAAE,sBAAOJ,IAAI,CAACE,IAAI,CAAC;cAC/CI,OAAO,GAAKF,OAAO,CAAAE,OAAZ;cACTC,SAAS,GAAG,EAAAC,EAAA,GAAAP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,SAAS,cAAAC,EAAA,uBAAAA,EAAA,CAAEC,GAAG,CAACC,eAAe,MAAK,EAAE;cACtC,qBAAMX,OAAO,CAACY,wBAAwB,EAAE;;cAA5DC,gBAAgB,GAAIC,EAAA,CAAAC,IAAA,EAAwC,CAAEL,GAAG,CAACC,eAAe,CAAC;cAClFK,eAAe,GAAG,EAAAC,EAAA,GAAAjB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgB,eAAe,cAAAC,EAAA,uBAAAA,EAAA,CAAEP,GAAG,CAACC,eAAe,MAAK,EAAE;cAC5E;cACAJ,OAAO,CAACT,gBAAgB,CAAC,GAAGoB,QAAA,CAAIL,gBAAgB,EAAKL,SAAS,EAAKQ,eAAe,EAAEG,IAAI,CAACxB,KAAK,CAAC;cAEzFyB,aAAa,GAAGF,QAAA,CACjBL,gBAAgB,CAACQ,MAAM,CAAC,UAACC,OAAO;gBAAK,OAAAA,OAAO,CAACC,UAAU,CAAC,UAAU,CAAC;cAA9B,CAA8B,CAAC,EACpEP,eAAe,EAClBG,IAAI,CAACxB,KAAK,CAAC;cACb,IAAIK,OAAO,CAACwB,OAAO,KAAK,SAAS,IAAIJ,aAAa,EAAE;gBAClDb,OAAO,CAACV,UAAU,CAAC,GAAGU,OAAO,CAACV,UAAU,CAAC,GAAMU,OAAO,CAACV,UAAU,CAAC,SAAIuB,aAAe,GAAGA,aAAa;;cAGvG,sBAAOnB,IAAI,CAAAwB,QAAA,CAAAA,QAAA,KACNtB,IAAI;gBACPE,OAAO,EAAAA;cAAA,GACP;;;;KACH;EAtB4B,CAsB5B;AAzBwE,CAyBxE;AAED;;;;;AAKA,IAAMM,eAAe,GAAG,SAAAA,CAACF,EAA8B;MAA9BQ,EAAA,GAAAS,MAAA,CAAAjB,EAAA,IAA8B;IAA7BkB,IAAI,GAAAV,EAAA;IAAEW,OAAO,GAAAX,EAAA;EACrC,IAAMY,oBAAoB,GAAGF,IAAI,CAACG,OAAO,CAAC,GAAG,CAAC;EAC9C,IAAMC,MAAM,GAAGJ,IAAI,CAACK,SAAS,CAAC,CAAC,EAAEH,oBAAoB,CAAC,CAAC,CAAC;EACxD,IAAII,MAAM,GAAGN,IAAI,CAACK,SAAS,CAACH,oBAAoB,GAAG,CAAC,CAAC;EACrD,IAAIE,MAAM,KAAK,KAAK,EAAE;IACpBE,MAAM,GAAGA,MAAM,CAACC,WAAW,EAAE;;EAE/B,OAAO,CAACH,MAAM,EAAEE,MAAM,EAAEL,OAAO,CAAC,CAC7BP,MAAM,CAAC,UAACc,IAAI;IAAK,OAAAA,IAAI,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC;EAAvB,CAAuB,CAAC,CACzC1B,GAAG,CAAC,UAACyB,IAAI;IAAA,OAAKA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,OAAO,CAACzC,eAAe,EAAE,GAAG;EAAA,CAAC,CAAC,CAClDuB,IAAI,CAAC,GAAG,CAAC;AACd,CAAC;AAED,OAAO,IAAMmB,6BAA6B,GAA2C;EACnFX,IAAI,EAAE,wBAAwB;EAC9BY,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,CAAC,gBAAgB,EAAE,YAAY,CAAC;EACtCC,QAAQ,EAAE;CACX;AAED,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAACC,MAA+B;EAA0B,OAAC;IAC3FC,YAAY,EAAE,SAAAA,CAACC,WAAW;MACxBA,WAAW,CAACC,GAAG,CAAChD,mBAAmB,CAAC6C,MAAM,CAAC,EAAEN,6BAA6B,CAAC;IAC7E;GACD;AAJ2F,CAI1F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}