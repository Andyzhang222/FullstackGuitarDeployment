{"ast":null,"code":"import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport var deserializerMiddlewareOption = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true\n};\nexport var serializerMiddlewareOption = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n  return {\n    applyToStack: function (commandStack) {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    }\n  };\n}","map":{"version":3,"names":["deserializerMiddleware","serializerMiddleware","deserializerMiddlewareOption","name","step","tags","override","serializerMiddlewareOption","getSerdePlugin","config","serializer","deserializer","applyToStack","commandStack","add"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/middleware-serde/src/serdePlugin.ts"],"sourcesContent":["import {\n  DeserializeHandlerOptions,\n  EndpointBearer,\n  MetadataBearer,\n  MiddlewareStack,\n  Pluggable,\n  RequestSerializer,\n  ResponseDeserializer,\n  SerializeHandlerOptions,\n} from \"@aws-sdk/types\";\n\nimport { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\n\nexport const deserializerMiddlewareOption: DeserializeHandlerOptions = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true,\n};\n\nexport const serializerMiddlewareOption: SerializeHandlerOptions = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true,\n};\n\nexport function getSerdePlugin<\n  InputType extends object,\n  SerDeContext extends EndpointBearer,\n  OutputType extends MetadataBearer\n>(\n  config: SerDeContext,\n  serializer: RequestSerializer<any, SerDeContext>,\n  deserializer: ResponseDeserializer<OutputType, any, SerDeContext>\n): Pluggable<InputType, OutputType> {\n  return {\n    applyToStack: (commandStack: MiddlewareStack<InputType, OutputType>) => {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    },\n  };\n}\n"],"mappings":"AAWA,SAASA,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,oBAAoB,QAAQ,wBAAwB;AAE7D,OAAO,IAAMC,4BAA4B,GAA8B;EACrEC,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,CAAC,cAAc,CAAC;EACtBC,QAAQ,EAAE;CACX;AAED,OAAO,IAAMC,0BAA0B,GAA4B;EACjEJ,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,CAAC,YAAY,CAAC;EACpBC,QAAQ,EAAE;CACX;AAED,OAAM,SAAUE,cAAcA,CAK5BC,MAAoB,EACpBC,UAAgD,EAChDC,YAAiE;EAEjE,OAAO;IACLC,YAAY,EAAE,SAAAA,CAACC,YAAoD;MACjEA,YAAY,CAACC,GAAG,CAACd,sBAAsB,CAACS,MAAM,EAAEE,YAAY,CAAC,EAAET,4BAA4B,CAAC;MAC5FW,YAAY,CAACC,GAAG,CAACb,oBAAoB,CAACQ,MAAM,EAAEC,UAAU,CAAC,EAAEH,0BAA0B,CAAC;IACxF;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}