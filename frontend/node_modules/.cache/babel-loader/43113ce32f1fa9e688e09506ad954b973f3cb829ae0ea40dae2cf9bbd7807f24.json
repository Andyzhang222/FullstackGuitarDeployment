{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});","map":{"version":3,"names":[],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/client-location/node_modules/@aws-crypto/ie11-detection/src/MsSubtleCrypto.ts"],"sourcesContent":["import { CryptoOperation } from \"./CryptoOperation\";\nimport { Key } from \"./Key\";\nimport { KeyOperation } from \"./KeyOperation\";\n\nexport type KeyUsage =\n  | \"encrypt\"\n  | \"decrypt\"\n  | \"sign\"\n  | \"verify\"\n  | \"derive\"\n  | \"wrapKey\"\n  | \"unwrapKey\"\n  | \"importKey\";\n\nexport type EncryptionOrVerificationAlgorithm = \"RSAES-PKCS1-v1_5\";\nexport type Ie11EncryptionAlgorithm =\n  | \"AES-CBC\"\n  | \"AES-GCM\"\n  | \"RSA-OAEP\"\n  | EncryptionOrVerificationAlgorithm;\nexport type Ie11DigestAlgorithm = \"SHA-1\" | \"SHA-256\" | \"SHA-384\";\n\nexport interface HashAlgorithm {\n  name: Ie11DigestAlgorithm;\n}\n\nexport interface HmacAlgorithm {\n  name: \"HMAC\";\n  hash: HashAlgorithm;\n}\n\nexport type SigningAlgorithm = HmacAlgorithm;\n\n/**\n * Represent ths SubtleCrypto interface as implemented in Internet Explorer 11.\n * This implementation was based on an earlier version of the WebCrypto API and\n * differs from the `window.crypto.subtle` object exposed in Chrome, Safari,\n * Firefox, and MS Edge.\n *\n * @see https://msdn.microsoft.com/en-us/library/dn302325(v=vs.85).aspx\n */\nexport interface MsSubtleCrypto {\n  decrypt(\n    algorithm: Ie11EncryptionAlgorithm,\n    key: Key,\n    buffer?: ArrayBufferView\n  ): CryptoOperation;\n\n  digest(\n    algorithm: Ie11DigestAlgorithm,\n    buffer?: ArrayBufferView\n  ): CryptoOperation;\n\n  encrypt(\n    algorithm: Ie11EncryptionAlgorithm,\n    key: Key,\n    buffer?: ArrayBufferView\n  ): CryptoOperation;\n\n  exportKey(format: string, key: Key): KeyOperation;\n\n  generateKey(\n    algorithm: SigningAlgorithm | Ie11EncryptionAlgorithm,\n    extractable?: boolean,\n    keyUsages?: Array<KeyUsage>\n  ): KeyOperation;\n\n  importKey(\n    format: string,\n    keyData: ArrayBufferView,\n    algorithm: any,\n    extractable?: boolean,\n    keyUsages?: Array<KeyUsage>\n  ): KeyOperation;\n\n  sign(\n    algorithm: SigningAlgorithm,\n    key: Key,\n    buffer?: ArrayBufferView\n  ): CryptoOperation;\n\n  verify(\n    algorithm: SigningAlgorithm | EncryptionOrVerificationAlgorithm,\n    key: Key,\n    signature: ArrayBufferView,\n    buffer?: ArrayBufferView\n  ): CryptoOperation;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}