{"ast":null,"code":"import { __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\n/**\n * @internal\n */\nexport function getPayloadHash(_a, hashConstructor) {\n  var headers = _a.headers,\n    body = _a.body;\n  return __awaiter(this, void 0, void 0, function () {\n    var _b, _c, headerName, hashCtor, _d;\n    var e_1, _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          try {\n            for (_b = __values(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n              headerName = _c.value;\n              if (headerName.toLowerCase() === SHA256_HEADER) {\n                return [2 /*return*/, headers[headerName]];\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_e = _b.return)) _e.call(_b);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n          if (!(body == undefined)) return [3 /*break*/, 1];\n          return [2 /*return*/, \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"];\n        case 1:\n          if (!(typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body))) return [3 /*break*/, 3];\n          hashCtor = new hashConstructor();\n          hashCtor.update(body);\n          _d = toHex;\n          return [4 /*yield*/, hashCtor.digest()];\n        case 2:\n          return [2 /*return*/, _d.apply(void 0, [_f.sent()])];\n        case 3:\n          // As any defined body that is not a string or binary data is a stream, this\n          // body is unsignable. Attempt to send the request with an unsigned payload,\n          // which may or may not be accepted by the service.\n          return [2 /*return*/, UNSIGNED_PAYLOAD];\n      }\n    });\n  });\n}","map":{"version":3,"names":["isArrayBuffer","toHex","SHA256_HEADER","UNSIGNED_PAYLOAD","getPayloadHash","_a","hashConstructor","headers","body","_b","__values","Object","keys","_c","next","done","headerName","value","toLowerCase","undefined","ArrayBuffer","isView","hashCtor","update","_d","digest","apply","_f","sent"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/s3-request-presigner/node_modules/@aws-sdk/signature-v4/src/getPayloadHash.ts"],"sourcesContent":["import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { HashConstructor, HttpRequest } from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\n\n/**\n * @internal\n */\nexport async function getPayloadHash(\n  { headers, body }: HttpRequest,\n  hashConstructor: HashConstructor\n): Promise<string> {\n  for (const headerName of Object.keys(headers)) {\n    if (headerName.toLowerCase() === SHA256_HEADER) {\n      return headers[headerName];\n    }\n  }\n\n  if (body == undefined) {\n    return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n  } else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n    const hashCtor = new hashConstructor();\n    hashCtor.update(body);\n    return toHex(await hashCtor.digest());\n  }\n\n  // As any defined body that is not a string or binary data is a stream, this\n  // body is unsignable. Attempt to send the request with an unsigned payload,\n  // which may or may not be accepted by the service.\n  return UNSIGNED_PAYLOAD;\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,0BAA0B;AAExD,SAASC,KAAK,QAAQ,4BAA4B;AAElD,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,aAAa;AAE7D;;;AAGA,OAAM,SAAgBC,cAAcA,CAClCC,EAA8B,EAC9BC,eAAgC;MAD9BC,OAAO,GAAAF,EAAA,CAAAE,OAAA;IAAEC,IAAI,GAAAH,EAAA,CAAAG,IAAA;;;;;;;;YAGf,KAAyBC,EAAA,GAAAC,QAAA,CAAAC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,GAAAM,EAAA,GAAAJ,EAAA,CAAAK,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAJ,EAAA,CAAAK,IAAA,IAAE;cAApCE,UAAU,GAAAH,EAAA,CAAAI,KAAA;cACnB,IAAID,UAAU,CAACE,WAAW,EAAE,KAAKhB,aAAa,EAAE;gBAC9C,sBAAOK,OAAO,CAACS,UAAU,CAAC;;;;;;;;;;;;;;gBAI1BR,IAAI,IAAIW,SAAS,GAAjB;UACF,sBAAO,kEAAkE;;gBAChE,OAAOX,IAAI,KAAK,QAAQ,IAAIY,WAAW,CAACC,MAAM,CAACb,IAAI,CAAC,IAAIR,aAAa,CAACQ,IAAI,CAAC,GAA3E;UACHc,QAAQ,GAAG,IAAIhB,eAAe,EAAE;UACtCgB,QAAQ,CAACC,MAAM,CAACf,IAAI,CAAC;UACdgB,EAAA,GAAAvB,KAAK;UAAC,qBAAMqB,QAAQ,CAACG,MAAM,EAAE;;UAApC,sBAAOD,EAAA,CAAAE,KAAA,UAAMC,EAAA,CAAAC,IAAA,EAAuB,EAAC;;UAGvC;UACA;UACA;UACA,sBAAOzB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}