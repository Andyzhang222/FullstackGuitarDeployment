{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function (options, serializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, serializer(args.input, options)];\n            case 1:\n              request = _a.sent();\n              return [2 /*return*/, next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"names":["serializerMiddleware","options","serializer","next","context","args","__awaiter","input","request","_a","sent","__assign"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/middleware-serde/src/serializerMiddleware.ts"],"sourcesContent":["import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const request = await serializer(args.input, options);\n  return next({\n    ...args,\n    request,\n  });\n};\n"],"mappings":";AAUA,OAAO,IAAMA,oBAAoB,GAAG,SAAAA,CAClCC,OAAqB,EACrBC,UAAgD;EACT,iBACvCC,IAAqC,EACrCC,OAAgC;IACI,iBACpCC,IAAsC;MAAA,OAAAC,SAAA;;;;;cAEtB,qBAAMJ,UAAU,CAACG,IAAI,CAACE,KAAK,EAAEN,OAAO,CAAC;;cAA/CO,OAAO,GAAGC,EAAA,CAAAC,IAAA,EAAqC;cACrD,sBAAOP,IAAI,CAAAQ,QAAA,CAAAA,QAAA,KACNN,IAAI;gBACPG,OAAO,EAAAA;cAAA,GACP;;;;KACH;EARqC,CAQrC;AAXwC,CAWxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}