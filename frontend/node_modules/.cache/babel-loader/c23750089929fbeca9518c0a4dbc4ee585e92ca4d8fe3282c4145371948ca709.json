{"ast":null,"code":"import { __awaiter, __extends, __generator, __rest } from \"tslib\";\nimport { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nvar AdaptiveRetryStrategy = function (_super) {\n  __extends(AdaptiveRetryStrategy, _super);\n  function AdaptiveRetryStrategy(maxAttemptsProvider, options) {\n    var _this = this;\n    var _a = options !== null && options !== void 0 ? options : {},\n      rateLimiter = _a.rateLimiter,\n      superOptions = __rest(_a, [\"rateLimiter\"]);\n    _this = _super.call(this, maxAttemptsProvider, superOptions) || this;\n    _this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter();\n    _this.mode = RETRY_MODES.ADAPTIVE;\n    return _this;\n  }\n  AdaptiveRetryStrategy.prototype.retry = function (next, args) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2, _super.prototype.retry.call(this, next, args, {\n          beforeRequest: function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              return __generator(this, function (_a) {\n                return [2, this.rateLimiter.getSendToken()];\n              });\n            });\n          },\n          afterRequest: function (response) {\n            _this.rateLimiter.updateClientSendingRate(response);\n          }\n        })];\n      });\n    });\n  };\n  return AdaptiveRetryStrategy;\n}(StandardRetryStrategy);\nexport { AdaptiveRetryStrategy };","map":{"version":3,"names":["__awaiter","__extends","__generator","__rest","RETRY_MODES","DefaultRateLimiter","StandardRetryStrategy","AdaptiveRetryStrategy","_super","maxAttemptsProvider","options","_this","_a","rateLimiter","superOptions","call","mode","ADAPTIVE","prototype","retry","next","args","beforeRequest","getSendToken","afterRequest","response","updateClientSendingRate"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/client-location/node_modules/@aws-sdk/middleware-retry/dist-es/AdaptiveRetryStrategy.js"],"sourcesContent":["import { __awaiter, __extends, __generator, __rest } from \"tslib\";\nimport { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nvar AdaptiveRetryStrategy = (function (_super) {\n    __extends(AdaptiveRetryStrategy, _super);\n    function AdaptiveRetryStrategy(maxAttemptsProvider, options) {\n        var _this = this;\n        var _a = options !== null && options !== void 0 ? options : {}, rateLimiter = _a.rateLimiter, superOptions = __rest(_a, [\"rateLimiter\"]);\n        _this = _super.call(this, maxAttemptsProvider, superOptions) || this;\n        _this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter();\n        _this.mode = RETRY_MODES.ADAPTIVE;\n        return _this;\n    }\n    AdaptiveRetryStrategy.prototype.retry = function (next, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, _super.prototype.retry.call(this, next, args, {\n                        beforeRequest: function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                return [2, this.rateLimiter.getSendToken()];\n                            });\n                        }); },\n                        afterRequest: function (response) {\n                            _this.rateLimiter.updateClientSendingRate(response);\n                        },\n                    })];\n            });\n        });\n    };\n    return AdaptiveRetryStrategy;\n}(StandardRetryStrategy));\nexport { AdaptiveRetryStrategy };\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,IAAIC,qBAAqB,GAAI,UAAUC,MAAM,EAAE;EAC3CP,SAAS,CAACM,qBAAqB,EAAEC,MAAM,CAAC;EACxC,SAASD,qBAAqBA,CAACE,mBAAmB,EAAEC,OAAO,EAAE;IACzD,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAG,CAAC,CAAC;MAAEG,WAAW,GAAGD,EAAE,CAACC,WAAW;MAAEC,YAAY,GAAGX,MAAM,CAACS,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;IACxID,KAAK,GAAGH,MAAM,CAACO,IAAI,CAAC,IAAI,EAAEN,mBAAmB,EAAEK,YAAY,CAAC,IAAI,IAAI;IACpEH,KAAK,CAACE,WAAW,GAAGA,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAGA,WAAW,GAAG,IAAIR,kBAAkB,CAAC,CAAC;IAC3GM,KAAK,CAACK,IAAI,GAAGZ,WAAW,CAACa,QAAQ;IACjC,OAAON,KAAK;EAChB;EACAJ,qBAAqB,CAACW,SAAS,CAACC,KAAK,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE;IAC1D,OAAOrB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIW,KAAK,GAAG,IAAI;MAChB,OAAOT,WAAW,CAAC,IAAI,EAAE,UAAUU,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,EAAEJ,MAAM,CAACU,SAAS,CAACC,KAAK,CAACJ,IAAI,CAAC,IAAI,EAAEK,IAAI,EAAEC,IAAI,EAAE;UACjDC,aAAa,EAAE,SAAAA,CAAA,EAAY;YAAE,OAAOtB,SAAS,CAACW,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;cAC7E,OAAOT,WAAW,CAAC,IAAI,EAAE,UAAUU,EAAE,EAAE;gBACnC,OAAO,CAAC,CAAC,EAAE,IAAI,CAACC,WAAW,CAACU,YAAY,CAAC,CAAC,CAAC;cAC/C,CAAC,CAAC;YACN,CAAC,CAAC;UAAE,CAAC;UACLC,YAAY,EAAE,SAAAA,CAAUC,QAAQ,EAAE;YAC9Bd,KAAK,CAACE,WAAW,CAACa,uBAAuB,CAACD,QAAQ,CAAC;UACvD;QACJ,CAAC,CAAC,CAAC;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,OAAOlB,qBAAqB;AAChC,CAAC,CAACD,qBAAqB,CAAE;AACzB,SAASC,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}