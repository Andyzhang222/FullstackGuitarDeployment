{"ast":null,"code":"/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nexport var getValueFromTextNode = function (obj) {\n  var textNodeName = \"#text\";\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n      obj[key] = obj[key][textNodeName];\n    } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n      obj[key] = getValueFromTextNode(obj[key]);\n    }\n  }\n  return obj;\n};","map":{"version":3,"names":["getValueFromTextNode","obj","textNodeName","key","hasOwnProperty","undefined"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/smithy-client/src/get-value-from-text-node.ts"],"sourcesContent":["/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nexport const getValueFromTextNode = (obj: any) => {\n  const textNodeName = \"#text\";\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n      obj[key] = obj[key][textNodeName];\n    } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n      obj[key] = getValueFromTextNode(obj[key]);\n    }\n  }\n  return obj;\n};\n"],"mappings":"AAAA;;;;AAIA,OAAO,IAAMA,oBAAoB,GAAG,SAAAA,CAACC,GAAQ;EAC3C,IAAMC,YAAY,GAAG,OAAO;EAC5B,KAAK,IAAMC,GAAG,IAAIF,GAAG,EAAE;IACrB,IAAIA,GAAG,CAACG,cAAc,CAACD,GAAG,CAAC,IAAIF,GAAG,CAACE,GAAG,CAAC,CAACD,YAAY,CAAC,KAAKG,SAAS,EAAE;MACnEJ,GAAG,CAACE,GAAG,CAAC,GAAGF,GAAG,CAACE,GAAG,CAAC,CAACD,YAAY,CAAC;KAClC,MAAM,IAAI,OAAOD,GAAG,CAACE,GAAG,CAAC,KAAK,QAAQ,IAAIF,GAAG,CAACE,GAAG,CAAC,KAAK,IAAI,EAAE;MAC5DF,GAAG,CAACE,GAAG,CAAC,GAAGH,oBAAoB,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;;;EAG7C,OAAOF,GAAG;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}