{"ast":null,"code":"import { __asyncGenerator, __await, __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { Comprehend } from \"../Comprehend\";\nimport { ComprehendClient } from \"../ComprehendClient\";\nimport { ListTopicsDetectionJobsCommand } from \"../commands/ListTopicsDetectionJobsCommand\";\n/**\n * @private\n */\nvar makePagedClientRequest = function (client, input) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, client.send.apply(client, __spread([new ListTopicsDetectionJobsCommand(input)], args))];\n        case 1:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n};\n/**\n * @private\n */\nvar makePagedRequest = function (client, input) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, client.listTopicsDetectionJobs.apply(client, __spread([input], args))];\n        case 1:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n};\nexport function paginateListTopicsDetectionJobs(config, input) {\n  var additionalArguments = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    additionalArguments[_i - 2] = arguments[_i];\n  }\n  return __asyncGenerator(this, arguments, function paginateListTopicsDetectionJobs_1() {\n    var token, hasNext, page;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          token = config.startingToken || undefined;\n          hasNext = true;\n          _a.label = 1;\n        case 1:\n          if (!hasNext) return [3 /*break*/, 9];\n          input.NextToken = token;\n          input[\"MaxResults\"] = config.pageSize;\n          if (!(config.client instanceof Comprehend)) return [3 /*break*/, 3];\n          return [4 /*yield*/, __await(makePagedRequest.apply(void 0, __spread([config.client, input], additionalArguments)))];\n        case 2:\n          page = _a.sent();\n          return [3 /*break*/, 6];\n        case 3:\n          if (!(config.client instanceof ComprehendClient)) return [3 /*break*/, 5];\n          return [4 /*yield*/, __await(makePagedClientRequest.apply(void 0, __spread([config.client, input], additionalArguments)))];\n        case 4:\n          page = _a.sent();\n          return [3 /*break*/, 6];\n        case 5:\n          throw new Error(\"Invalid client, expected Comprehend | ComprehendClient\");\n        case 6:\n          return [4 /*yield*/, __await(page)];\n        case 7:\n          return [4 /*yield*/, _a.sent()];\n        case 8:\n          _a.sent();\n          token = page.NextToken;\n          hasNext = !!token;\n          return [3 /*break*/, 1];\n        case 9:\n          return [4 /*yield*/, __await(undefined)];\n        case 10:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n}","map":{"version":3,"names":["Comprehend","ComprehendClient","ListTopicsDetectionJobsCommand","makePagedClientRequest","client","input","args","_i","arguments","length","send","apply","__spread","_a","sent","makePagedRequest","listTopicsDetectionJobs","paginateListTopicsDetectionJobs","config","additionalArguments","token","startingToken","undefined","hasNext","NextToken","pageSize","__await","page","Error"],"sources":["/Users/andyzhang/Documents/GitHub/Full-stack-project-GuitarSaleWeb/frontend/node_modules/@aws-sdk/client-comprehend/pagination/ListTopicsDetectionJobsPaginator.ts"],"sourcesContent":["import { Comprehend } from \"../Comprehend\";\nimport { ComprehendClient } from \"../ComprehendClient\";\nimport {\n  ListTopicsDetectionJobsCommand,\n  ListTopicsDetectionJobsCommandInput,\n  ListTopicsDetectionJobsCommandOutput,\n} from \"../commands/ListTopicsDetectionJobsCommand\";\nimport { ComprehendPaginationConfiguration } from \"./Interfaces\";\nimport { Paginator } from \"@aws-sdk/types\";\n\n/**\n * @private\n */\nconst makePagedClientRequest = async (\n  client: ComprehendClient,\n  input: ListTopicsDetectionJobsCommandInput,\n  ...args: any\n): Promise<ListTopicsDetectionJobsCommandOutput> => {\n  // @ts-ignore\n  return await client.send(new ListTopicsDetectionJobsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (\n  client: Comprehend,\n  input: ListTopicsDetectionJobsCommandInput,\n  ...args: any\n): Promise<ListTopicsDetectionJobsCommandOutput> => {\n  // @ts-ignore\n  return await client.listTopicsDetectionJobs(input, ...args);\n};\nexport async function* paginateListTopicsDetectionJobs(\n  config: ComprehendPaginationConfiguration,\n  input: ListTopicsDetectionJobsCommandInput,\n  ...additionalArguments: any\n): Paginator<ListTopicsDetectionJobsCommandOutput> {\n  // ToDo: replace with actual type instead of typeof input.NextToken\n  let token: typeof input.NextToken | undefined = config.startingToken || undefined;\n  let hasNext = true;\n  let page: ListTopicsDetectionJobsCommandOutput;\n  while (hasNext) {\n    input.NextToken = token;\n    input[\"MaxResults\"] = config.pageSize;\n    if (config.client instanceof Comprehend) {\n      page = await makePagedRequest(config.client, input, ...additionalArguments);\n    } else if (config.client instanceof ComprehendClient) {\n      page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n    } else {\n      throw new Error(\"Invalid client, expected Comprehend | ComprehendClient\");\n    }\n    yield page;\n    token = page.NextToken;\n    hasNext = !!token;\n  }\n  // @ts-ignore\n  return undefined;\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SACEC,8BAA8B,QAGzB,4CAA4C;AAInD;;;AAGA,IAAMC,sBAAsB,GAAG,SAAAA,CAC7BC,MAAwB,EACxBC,KAA0C;EAC1C,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAY,EAAZA,EAAA,GAAAC,SAAA,CAAAC,MAAY,EAAZF,EAAA,EAAY;IAAZD,IAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;;;;;UAGO,qBAAMH,MAAM,CAACM,IAAI,CAAAC,KAAA,CAAXP,MAAM,EAAAQ,QAAA,EAAM,IAAIV,8BAA8B,CAACG,KAAK,CAAC,GAAKC,IAAI;;UAD3E;UACA,sBAAOO,EAAA,CAAAC,IAAA,EAAqE;;;;CAC7E;AACD;;;AAGA,IAAMC,gBAAgB,GAAG,SAAAA,CACvBX,MAAkB,EAClBC,KAA0C;EAC1C,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAY,EAAZA,EAAA,GAAAC,SAAA,CAAAC,MAAY,EAAZF,EAAA,EAAY;IAAZD,IAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;;;;;UAGO,qBAAMH,MAAM,CAACY,uBAAuB,CAAAL,KAAA,CAA9BP,MAAM,EAAAQ,QAAA,EAAyBP,KAAK,GAAKC,IAAI;;UAD1D;UACA,sBAAOO,EAAA,CAAAC,IAAA,EAAoD;;;;CAC5D;AACD,OAAM,SAAiBG,+BAA+BA,CACpDC,MAAyC,EACzCb,KAA0C;EAC1C,IAAAc,mBAAA;OAAA,IAAAZ,EAAA,IAA2B,EAA3BA,EAAA,GAAAC,SAAA,CAAAC,MAA2B,EAA3BF,EAAA,EAA2B;IAA3BY,mBAAA,CAAAZ,EAAA,QAAAC,SAAA,CAAAD,EAAA;;;;;;;UAGIa,KAAK,GAAuCF,MAAM,CAACG,aAAa,IAAIC,SAAS;UAC7EC,OAAO,GAAG,IAAI;;;eAEXA,OAAO;UACZlB,KAAK,CAACmB,SAAS,GAAGJ,KAAK;UACvBf,KAAK,CAAC,YAAY,CAAC,GAAGa,MAAM,CAACO,QAAQ;gBACjCP,MAAM,CAACd,MAAM,YAAYJ,UAAU,GAAnC;UACK,qBAAA0B,OAAA,CAAMX,gBAAgB,CAAAJ,KAAA,SAAAC,QAAA,EAACM,MAAM,CAACd,MAAM,EAAEC,KAAK,GAAKc,mBAAmB;;UAA1EQ,IAAI,GAAGd,EAAA,CAAAC,IAAA,EAAoE;;;gBAClEI,MAAM,CAACd,MAAM,YAAYH,gBAAgB,GAAzC;UACF,qBAAAyB,OAAA,CAAMvB,sBAAsB,CAAAQ,KAAA,SAAAC,QAAA,EAACM,MAAM,CAACd,MAAM,EAAEC,KAAK,GAAKc,mBAAmB;;UAAhFQ,IAAI,GAAGd,EAAA,CAAAC,IAAA,EAA0E;;;UAEjF,MAAM,IAAIc,KAAK,CAAC,wDAAwD,CAAC;;uCAErED,IAAI;;UAAV,qBAAAd,EAAA,CAAAC,IAAA;;UAAAD,EAAA,CAAAC,IAAA,EAAU;UACVM,KAAK,GAAGO,IAAI,CAACH,SAAS;UACtBD,OAAO,GAAG,CAAC,CAACH,KAAK;;;uCAGZE,SAAS;;UADhB;UACA,sBAAAT,EAAA,CAAAC,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}